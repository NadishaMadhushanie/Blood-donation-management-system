{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\Main Project\\\\New folder (2)\\\\my-app\\\\src\\\\screens\\\\UserRegisterScreen.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Input } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport HeaderComponent from \"../components/HeaderComponent\";\nimport { Formik } from 'formik';\nimport NicValidation from \"../jscodes/NicValidation\";\nimport * as yup from 'yup';\nvar ReviewSchema = yup.object({\n  name: yup.string().required(),\n  nic: yup.string().required().min(10),\n  address: yup.string().required(),\n  mail: yup.string().required().email(),\n  number: yup.string().required().min(10),\n  password: yup.string().required('No Password provided').min(8),\n  passwordAgain: yup.string().required('Enter your password again').oneOf([yup.ref('pasword'), null], 'Password must match')\n});\n\nvar UserRegisterScreen = function UserRegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var openMenu = function openMenu(_ref2) {\n    var navigation = _ref2.navigation;\n    navigation.openDrawer();\n  };\n\n  return React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(HeaderComponent, {\n    openMenu: openMenu,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.signIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, \"Sign In\"), React.createElement(Formik, {\n    initialValues: {\n      name: '',\n      nic: '',\n      address: '',\n      mail: '',\n      number: '',\n      password: '',\n      passwordAgain: ''\n    },\n    validationSchema: ReviewSchema,\n    onSubmit: function onSubmit(values) {\n      navigation.navigate('My Profile', {});\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, function (props) {\n    return React.createElement(View, {\n      style: styles.form,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.errorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, props.touched.name && props.errors.name), React.createElement(Input, {\n      placeholder: \"Enter Name here\",\n      style: styles.name,\n      onChangeText: props.handleChange('name'),\n      value: props.values.name,\n      inputContainerStyle: {\n        borderBottomWidth: 0\n      },\n      placeholderTextColor: \"black\",\n      multiline: true,\n      onBlur: props.handleBlur('name'),\n      leftIcon: React.createElement(Icon, {\n        name: \"user\",\n        size: 24,\n        color: \"black\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 33\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      style: styles.errorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, props.touched.nic && props.errors.nic), React.createElement(Input, {\n      placeholder: \"Enter national ID number here\",\n      style: styles.name,\n      onChangeText: props.handleChange('nic'),\n      value: props.values.nic,\n      inputContainerStyle: {\n        borderBottomWidth: 0\n      },\n      placeholderTextColor: \"black\",\n      onBlur: props.handleBlur('nic'),\n      leftIcon: React.createElement(Icon, {\n        name: \"id-card\",\n        size: 24,\n        color: \"black\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 33\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      style: styles.errorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }, props.touched.address && props.errors.address), React.createElement(Input, {\n      placeholder: \"Enter Adress here\",\n      style: styles.name,\n      onChangeText: props.handleChange('address'),\n      value: props.values.address,\n      inputContainerStyle: {\n        borderBottomWidth: 0\n      },\n      placeholderTextColor: \"black\",\n      multiline: true,\n      onBlur: props.handleBlur('address'),\n      leftIcon: React.createElement(Icon, {\n        name: \"map-marker\",\n        size: 24,\n        color: \"black\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 33\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      style: styles.errorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, props.touched.mail && props.errors.mail), React.createElement(Input, {\n      placeholder: \"Enter Email here\",\n      style: styles.name,\n      onChangeText: props.handleChange('mail'),\n      value: props.values.mail,\n      inputContainerStyle: {\n        borderBottomWidth: 0\n      },\n      placeholderTextColor: \"black\",\n      onBlur: props.handleBlur('mail'),\n      leftIcon: React.createElement(Icon, {\n        name: \"envelope\",\n        size: 24,\n        color: \"black\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 33\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      style: styles.errorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, props.touched.number && props.errors.number), React.createElement(Input, {\n      placeholder: \"Enter Contact number here\",\n      style: styles.name,\n      onChangeText: props.handleChange('number'),\n      value: props.values.number,\n      inputContainerStyle: {\n        borderBottomWidth: 0\n      },\n      placeholderTextColor: \"black\",\n      keyboardType: \"numeric\",\n      onBlur: props.handleBlur('number'),\n      leftIcon: React.createElement(Icon, {\n        name: \"phone\",\n        size: 24,\n        color: \"black\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 33\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      style: styles.errorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, props.touched.password && props.errors.password), React.createElement(Input, {\n      placeholder: \"  Enter password here\",\n      style: styles.name,\n      onChangeText: props.handleChange('password'),\n      value: props.values.password,\n      inputContainerStyle: {\n        borderBottomWidth: 0\n      },\n      placeholderTextColor: \"black\",\n      secureTextEntry: true,\n      onBlur: props.handleBlur('password'),\n      leftIcon: React.createElement(Icon, {\n        name: \"key\",\n        size: 24,\n        color: \"black\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 33\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      style: styles.errorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, props.touched.passwordAgain && props.errors.passwordAgain), React.createElement(Input, {\n      placeholder: \"Enter password again here\",\n      style: styles.name,\n      onChangeText: props.handleChange('passwordAgain'),\n      value: props.values.passwordAgain,\n      inputContainerStyle: {\n        borderBottomWidth: 0\n      },\n      placeholderTextColor: \"black\",\n      secureTextEntry: true,\n      onBlur: props.handleBlur('passwordAgain'),\n      leftIcon: React.createElement(Icon, {\n        name: \"key\",\n        size: 24,\n        color: \"black\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 33\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Home');\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }, React.createElement(View, {\n      style: {\n        backgroundColor: '#16a596',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderRadius: 100,\n        borderWidth: 3,\n        width: Dimensions.get('window').width * 0.5,\n        height: 50\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 29\n      }\n    }, React.createElement(Text, {\n      style: {\n        color: 'black',\n        fontWeight: 'bold',\n        fontSize: 20\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 33\n      }\n    }, \"Create Account\"))));\n  }));\n};\n\nvar styles = StyleSheet.create({\n  name: {\n    borderWidth: 2,\n    borderRadius: 100,\n    backgroundColor: '#fff3e2',\n    textAlign: 'center'\n  },\n  form: {\n    marginTop: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 50\n  },\n  textInput: {\n    textAlign: 'center',\n    height: 40\n  },\n  nameIcon: {\n    marginTop: 5\n  },\n  signIn: {\n    fontWeight: 'bold',\n    fontSize: 40,\n    textAlign: 'center',\n    marginTop: 30,\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 5\n  },\n  errorMessage: {\n    fontSize: 10\n  }\n});\nexport default UserRegisterScreen;","map":{"version":3,"sources":["D:/Main Project/New folder (2)/my-app/src/screens/UserRegisterScreen.js"],"names":["React","Input","Icon","HeaderComponent","Formik","NicValidation","yup","ReviewSchema","object","name","string","required","nic","min","address","mail","email","number","password","passwordAgain","oneOf","ref","UserRegisterScreen","navigation","openMenu","openDrawer","styles","signIn","values","navigate","props","form","errorMessage","touched","errors","handleChange","borderBottomWidth","handleBlur","backgroundColor","alignItems","justifyContent","borderRadius","borderWidth","width","Dimensions","get","height","color","fontWeight","fontSize","StyleSheet","create","textAlign","marginTop","marginBottom","textInput","nameIcon","textShadowColor","textShadowOffset","textShadowRadius"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View,\r\n         Text, \r\n         TouchableOpacity,\r\n         StyleSheet,\r\n         Dimensions,\r\n         ScrollView } from 'react-native';\r\nimport { Input } from 'react-native-elements';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport HeaderComponent from '../components/HeaderComponent';\r\nimport {Formik} from 'formik';\r\nimport NicValidation from '../jscodes/NicValidation';\r\nimport * as yup from 'yup';\r\n\r\n\r\n\r\nconst ReviewSchema = yup.object({\r\n    name: yup.string()//must be string\r\n        .required(),//need to fill the input\r\n\r\n    nic: yup.string()//should be string\r\n        .required()\r\n        .min(10),//should fill \r\n\r\n    address: yup.string()//should be string\r\n             .required(),//field is required\r\n\r\n    mail: yup.string()\r\n          .required()\r\n          .email(),//email validation\r\n    \r\n    number: yup.string()//phone number validation\r\n            .required()\r\n            .min(10),\r\n\r\n    password: yup.string()//pasword validation\r\n              .required('No Password provided')\r\n              .min(8),\r\n\r\n    passwordAgain: yup.string()//password confirmation\r\n                   .required('Enter your password again')\r\n                   .oneOf([yup.ref('pasword'), null],'Password must match')\r\n}); \r\n\r\nconst UserRegisterScreen = ({navigation}) => {\r\n\r\n    const openMenu = ({navigation}) => {\r\n        navigation.openDrawer(); \r\n    }\r\n   \r\n    return(\r\n        \r\n        <ScrollView>\r\n         \r\n                <HeaderComponent\r\n                    openMenu={openMenu}\r\n                />\r\n                     \r\n                <Text style={styles.signIn}>Sign In</Text>\r\n          \r\n            <Formik\r\n                initialValues={{ name: '',\r\n                                 nic: '',\r\n                                 address: '',\r\n                                 mail: '',\r\n                                 number: '',\r\n                                 password: '',\r\n                                 passwordAgain: ''\r\n                                }}\r\n                validationSchema={ReviewSchema}\r\n                onSubmit={(values) => {\r\n                    navigation.navigate('My Profile',{\r\n                        \r\n                    });\r\n                }}\r\n                >\r\n                {(props) => (\r\n                    <View style={styles.form}>\r\n\r\n                    <Text style={styles.errorMessage}>{props.touched.name && props.errors.name}</Text>\r\n                        <Input //Enter Name number here\r\n                            placeholder='Enter Name here'\r\n                            style={styles.name}\r\n                            onChangeText={props.handleChange('name')}\r\n                            value={props.values.name}\r\n                            inputContainerStyle={{borderBottomWidth:0}}\r\n                            placeholderTextColor='black'\r\n                            multiline={true}\r\n                            onBlur={props.handleBlur('name')}\r\n                            leftIcon={\r\n                                <Icon\r\n                                  name='user'\r\n                                  size={24}\r\n                                  color='black'\r\n                                />\r\n                              }\r\n                        />\r\n\r\n                        <Text style={styles.errorMessage}>{props.touched.nic && props.errors.nic}</Text>\r\n                        <Input //Enter NIC here\r\n                            placeholder='Enter national ID number here'\r\n                            style={styles.name}\r\n                            onChangeText={props.handleChange('nic')}\r\n                            value={props.values.nic}\r\n                            inputContainerStyle={{borderBottomWidth:0}}\r\n                            placeholderTextColor='black'\r\n                            onBlur={props.handleBlur('nic')}\r\n                            leftIcon={\r\n                                <Icon\r\n                                  name='id-card'\r\n                                  size={24}\r\n                                  color='black'\r\n                                />\r\n                              }\r\n                        />\r\n\r\n                        \r\n                        <Text style={styles.errorMessage}>{props.touched.address && props.errors.address}</Text>\r\n                        <Input //Enter Adress here\r\n                            placeholder='Enter Adress here'\r\n                            style={styles.name}\r\n                            onChangeText={props.handleChange('address')}\r\n                            value={props.values.address}\r\n                            inputContainerStyle={{borderBottomWidth:0}}\r\n                            placeholderTextColor='black'\r\n                            multiline={true}\r\n                            onBlur={props.handleBlur('address')}\r\n                            leftIcon={\r\n                                <Icon\r\n                                  name='map-marker'\r\n                                  size={24}\r\n                                  color='black'\r\n                                />\r\n                              }\r\n                        />\r\n                        \r\n\r\n                        <Text style={styles.errorMessage}>{props.touched.mail &&props.errors.mail}</Text>\r\n                        <Input //Enter Email here\r\n                            placeholder='Enter Email here'\r\n                            style={styles.name}\r\n                            onChangeText={props.handleChange('mail')}\r\n                            value={props.values.mail}\r\n                            inputContainerStyle={{borderBottomWidth:0}}\r\n                            placeholderTextColor='black'\r\n                            onBlur={props.handleBlur('mail')}\r\n                            leftIcon={\r\n                                <Icon\r\n                                  name='envelope'\r\n                                  size={24}\r\n                                  color='black'\r\n                                />\r\n                              }\r\n                        />\r\n                        \r\n\r\n                        <Text style={styles.errorMessage}>{props.touched.number && props.errors.number}</Text>\r\n                        <Input //Enter Contact number here\r\n                            placeholder='Enter Contact number here'\r\n                            style={styles.name}\r\n                            onChangeText={props.handleChange('number')}\r\n                            value={props.values.number}\r\n                            inputContainerStyle={{borderBottomWidth:0}}\r\n                            placeholderTextColor='black'\r\n                            keyboardType='numeric'\r\n                            onBlur={props.handleBlur('number')}\r\n                            leftIcon={\r\n                                <Icon\r\n                                  name='phone'\r\n                                  size={24}\r\n                                  color='black'\r\n                                />\r\n                              }\r\n                        />\r\n\r\n                        <Text style={styles.errorMessage}>{props.touched.password && props.errors.password}</Text>\r\n                        <Input //Enter password here\r\n                            placeholder='  Enter password here'\r\n                            style={styles.name}\r\n                            onChangeText={props.handleChange('password')}\r\n                            value={props.values.password}\r\n                            inputContainerStyle={{borderBottomWidth:0}}\r\n                            placeholderTextColor='black'\r\n                            secureTextEntry={true}\r\n                            onBlur={props.handleBlur('password')}\r\n                            leftIcon={\r\n                                <Icon\r\n                                  name='key'\r\n                                  size={24}\r\n                                  color='black'\r\n                                />\r\n                              }\r\n                        />\r\n \r\n                        <Text style={styles.errorMessage}>{props.touched.passwordAgain && props.errors.passwordAgain}</Text>\r\n                        <Input //reEnter password here\r\n                            placeholder='Enter password again here'\r\n                            style={styles.name}\r\n                            onChangeText={props.handleChange('passwordAgain')}\r\n                            value={props.values.passwordAgain}\r\n                            inputContainerStyle={{borderBottomWidth:0}}\r\n                            placeholderTextColor='black'\r\n                            secureTextEntry={true}\r\n                            onBlur={props.handleBlur('passwordAgain')}\r\n                            leftIcon={\r\n                                <Icon\r\n                                  name='key'\r\n                                  size={24}\r\n                                  color='black'\r\n                                />\r\n                              }\r\n                        />\r\n                        \r\n                        <TouchableOpacity \r\n                            onPress={() => navigation.navigate('Home')}//Create Account Button\r\n                            //disabled={/*!(Formik.isValid && Formik.dirty)*/}\r\n                        >\r\n                            <View style = {{backgroundColor: '#16a596', \r\n                                            alignItems: 'center', \r\n                                            justifyContent: 'center', \r\n                                            borderRadius: 100,\r\n                                            borderWidth : 3, \r\n                                            width: (Dimensions.get('window').width)*(0.5),\r\n                                            height: 50}}\r\n                            >\r\n                                <Text style = {{color: 'black',\r\n                                                fontWeight: 'bold',\r\n                                                fontSize: 20}}>Create Account</Text>\r\n                            </View>\r\n                        </TouchableOpacity>\r\n                    \r\n                    </View>\r\n                )}\r\n            </Formik>\r\n        </ScrollView>\r\n    \r\n    \r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    name : {\r\n        borderWidth : 2,\r\n        borderRadius : 100,    \r\n        backgroundColor: '#fff3e2',\r\n        textAlign: 'center',\r\n    },\r\n    form : {\r\n        marginTop : 30,\r\n        alignItems: 'center', \r\n        justifyContent: 'center',\r\n        marginBottom: 50\r\n    },\r\n    textInput : {\r\n        textAlign : 'center',\r\n        height : 40,\r\n    },\r\n    nameIcon: {\r\n        marginTop: 5,\r\n    },\r\n    signIn: {\r\n        fontWeight: 'bold',\r\n        fontSize: 40,\r\n        textAlign: 'center',\r\n        marginTop: 30,\r\n        textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n        textShadowOffset: {width: -1, height: 1},\r\n        textShadowRadius: 5\r\n    },\r\n    errorMessage:{\r\n        fontSize: 10\r\n    }\r\n  \r\n})\r\n\r\nexport default UserRegisterScreen;"]},"metadata":{},"sourceType":"module"}