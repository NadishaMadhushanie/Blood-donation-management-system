{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Main Project\\\\New folder (2)\\\\my-app\\\\src\\\\screens\\\\LoginScreen.js\";\n\nimport React, { useState, setState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Button, Avatar } from 'react-native-elements';\nimport { AntDesign } from '@expo/vector-icons';\nimport FlatButton from \"../components/FlatButton\";\nimport HeaderComponent from \"../components/HeaderComponent\";\nimport ProfileScreen from \"../screens/ProfileScreen\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Input } from 'react-native-elements';\nimport * as Animatable from 'react-native-animatable';\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setemail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setpassword = _useState4[1];\n\n  var openMenu = function openMenu() {\n    navigation.openDrawer();\n  };\n\n  var submit = function submit() {\n    fetch('http://192.168.1.12:4000/login', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      return console.log(data);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, React.createElement(HeaderComponent, {\n    openMenu: openMenu,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.viewComponent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"user-circle\",\n    size: 100,\n    color: \"black\",\n    style: {\n      marginVertical: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Enter Email Here\",\n    style: styles.email,\n    inputContainerStyle: {\n      borderBottomWidth: 0\n    },\n    placeholderTextColor: \"black\",\n    onChangeText: function onChangeText(e) {\n      return setemail(e);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"user\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Enter Password here\",\n    style: styles.email,\n    secureTextEntry: true,\n    inputContainerStyle: {\n      borderBottomWidth: 0\n    },\n    placeholderTextColor: \"black\",\n    onChangeText: function onChangeText(e) {\n      return setpassword(e);\n    },\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      size: 24,\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      submit();\n    },\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: '#f05454',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth: 3,\n      borderRadius: 100,\n      width: Dimensions.get('window').width * 0.55,\n      height: 50\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'black',\n      fontWeight: 'bold',\n      fontSize: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Log-In\")))));\n};\n\nvar styles = StyleSheet.create({\n  mainComponent: {\n    marginTop: 100\n  },\n  viewComponent: {\n    paddingTop: 100,\n    marginTop: 100\n  },\n  bloodBankLogo: {\n    width: 50,\n    height: 100,\n    resizeMode: 'stretch'\n  },\n  email: {\n    marginHorizontal: Dimensions.get('window').width * 0.001,\n    borderWidth: 2,\n    borderRadius: 100,\n    backgroundColor: '#fff3e2',\n    textAlign: 'center'\n  },\n  viewComponent: {\n    alignItems: 'center'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["D:/Main Project/New folder (2)/my-app/src/screens/LoginScreen.js"],"names":["React","useState","setState","Button","Avatar","AntDesign","FlatButton","HeaderComponent","ProfileScreen","Icon","Input","Animatable","LoginScreen","navigation","email","setemail","password","setpassword","openMenu","openDrawer","submit","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","catch","error","styles","viewComponent","marginVertical","borderBottomWidth","e","marginTop","backgroundColor","alignItems","justifyContent","borderWidth","borderRadius","width","Dimensions","get","height","color","fontWeight","fontSize","StyleSheet","create","mainComponent","paddingTop","bloodBankLogo","resizeMode","marginHorizontal","textAlign"],"mappings":"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","sourcesContent":["import React, { useState,setState } from 'react';\nimport { View, \n         Text, \n         StyleSheet,\n         Image,\n         TextInput,\n        TouchableOpacity, \n        SafeAreaView,\n        Dimensions} from 'react-native';\nimport { Button, Avatar } from 'react-native-elements';\nimport {  AntDesign} from '@expo/vector-icons';\nimport FlatButton from '../components/FlatButton';\nimport HeaderComponent from '../components/HeaderComponent';\nimport ProfileScreen from '../screens/ProfileScreen';   \nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport { Input } from 'react-native-elements';\nimport * as Animatable from 'react-native-animatable';\n\nconst LoginScreen = ({navigation}) => {\n\n   const[email,setemail] = useState('');//state for email\n   const[password,setpassword] = useState('');//state for password\n \n    const openMenu = () => {//Navigate\n        navigation.openDrawer(); \n    }\n    \n    const submit =  () => {\n           fetch('http://192.168.1.12:4000/login', {\n              method: 'post',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                  email: email, \n                  password: password\n              })\n          }).then(res => {\n              return res.json()\n              \n          })\n          .then(data => console.log(data))\n          .catch(error => console.log(error))\n       \n         \n    }\n\n    return(\n       \n        <View>\n                <HeaderComponent\n                    openMenu={openMenu}\n                />\n        <View \n            style={styles.viewComponent}>\n            <Icon\n                   \n                    name='user-circle'\n                    size={100}\n                    color='black'\n                    style={{marginVertical: 10}}\n            />\n\n            <Input //Input for Email\n                placeholder='Enter Email Here'\n                style={styles.email}\n                inputContainerStyle={{borderBottomWidth:0}}\n                placeholderTextColor='black'\n                onChangeText={(e) => setemail(e)}\n                leftIcon={\n                <Icon\n                    name='user'\n                    size={24}\n                    color='black'\n                />\n                        }\n            />\n        \n\n            <Input\n                placeholder='Enter Password here'\n                style={styles.email}\n                secureTextEntry={true}\n                inputContainerStyle={{borderBottomWidth:0}}\n                placeholderTextColor='black'\n                onChangeText={(e) => setpassword(e)}\n                leftIcon={\n                <Icon\n                    name='lock'\n                    size={24}\n                    color='black'\n                />\n                    }\n            />\n\n            <TouchableOpacity \n            onPress={() => {submit()}}//Create Account Button\n            style={{marginTop: 10}}\n            >\n            <View style = {{backgroundColor: '#f05454', \n                            alignItems: 'center', \n                            justifyContent: 'center',\n                            borderWidth : 3, \n                            borderRadius: 100,\n                            width: (Dimensions.get('window').width)*(0.55),\n                            height: 50}}\n            >\n                <Text style = {{color: 'black',\n                                fontWeight: 'bold',\n                                fontSize: 20}}>Log-In</Text>\n            </View>\n        </TouchableOpacity>\n        </View>\n            </View>          \n         \n    )\n}\n\nconst styles = StyleSheet.create({\n    mainComponent : {\n        marginTop : 100\n    },\n    viewComponent : {\n        paddingTop : 100,\n        marginTop : 100\n    },\n    bloodBankLogo : {\n        width : 50,\n        height : 100,\n        resizeMode: 'stretch'\n   } , \n   email : {\n       marginHorizontal : (Dimensions.get('window').width)*(0.001),\n       borderWidth : 2,\n       borderRadius : 100,    \n       backgroundColor: '#fff3e2',\n       textAlign: 'center',\n   },\n   viewComponent : {\n    alignItems : 'center'   \n   }\n});\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}